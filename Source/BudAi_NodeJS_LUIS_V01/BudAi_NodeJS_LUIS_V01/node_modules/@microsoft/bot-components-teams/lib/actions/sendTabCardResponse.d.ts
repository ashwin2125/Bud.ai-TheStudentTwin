import { BoolExpression } from 'adaptive-expressions';
import { Activity } from 'botbuilder';
import { Converter, ConverterFactory, Dialog, DialogContext, DialogStateManager, DialogTurnResult, TemplateInterface } from 'botbuilder-dialogs';
export interface SendTabCardResponseConfiguration extends Dialog {
    cards?: TemplateInterface<Activity, DialogStateManager>;
    disabled?: boolean | string | BoolExpression;
}
/**
 * Send a Card Tab response to the user.
 */
export declare class SendTabCardResponse extends Dialog {
    /**
     * Class identifier.
     */
    static $kind: string;
    /**
     * Gets or sets an optional expression which if is true will disable this action.
     */
    disabled?: BoolExpression;
    /**
     * Template for the activity expression containing Adaptive Cards to send.
     */
    cards?: TemplateInterface<Activity, DialogStateManager>;
    getConverter(property: keyof Dialog | string): Converter | ConverterFactory;
    /**
     * Called when the dialog is started and pushed onto the dialog stack.
     *
     * @param {DialogContext} dc The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the current turn of conversation.
     * @param {object} _options Optional, initial information to pass to the dialog.
     * @returns {Promise<DialogTurnResult>} A promise representing the asynchronous operation.
     */
    beginDialog(dc: DialogContext, _options?: Record<string, unknown>): Promise<DialogTurnResult>;
    /**
     * Builds the compute Id for the dialog.
     *
     * @returns {string} A string representing the compute Id.
     */
    protected onComputeId(): string;
    private getTabInvokeResponse;
}
