"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnTeamsMEConfigQuerySettingUrl = void 0;
const adaptive_expressions_1 = require("adaptive-expressions");
const botbuilder_1 = require("botbuilder");
const botbuilder_dialogs_1 = require("botbuilder-dialogs");
const botbuilder_dialogs_adaptive_1 = require("botbuilder-dialogs-adaptive");
/**
 * Actions triggered when a Teams InvokeActivity is received with activity.name='composeExtension/querySettingUrl'.
 */
class OnTeamsMEConfigQuerySettingUrl extends botbuilder_dialogs_adaptive_1.OnInvokeActivity {
    /**
     * Create expression for this condition.
     *
     * @returns {Expression} An [Expression](xref:adaptive-expressions.Expression) used to evaluate this rule.
     */
    createExpression() {
        const expressions = [
            adaptive_expressions_1.Expression.parse(`${botbuilder_dialogs_1.TurnPath.activity}.channelId == '${botbuilder_1.Channels.Msteams}' && ${botbuilder_dialogs_1.TurnPath.activity}.name == 'composeExtension/querySettingUrl'`),
            super.createExpression(),
        ];
        if (this.commandId) {
            expressions.push(adaptive_expressions_1.Expression.parse(`${botbuilder_dialogs_1.TurnPath.activity}.value.commandId == '${this.commandId}'`));
        }
        return adaptive_expressions_1.Expression.andExpression(...expressions);
    }
}
exports.OnTeamsMEConfigQuerySettingUrl = OnTeamsMEConfigQuerySettingUrl;
OnTeamsMEConfigQuerySettingUrl.$kind = 'Teams.OnMEConfigQuerySettingUrl';
//# sourceMappingURL=onTeamsMEConfigQuerySettingUrl.js.map