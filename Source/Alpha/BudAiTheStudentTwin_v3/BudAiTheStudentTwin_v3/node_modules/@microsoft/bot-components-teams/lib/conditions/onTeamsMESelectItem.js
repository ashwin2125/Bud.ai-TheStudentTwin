"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnTeamsMESelectItem = void 0;
const adaptive_expressions_1 = require("adaptive-expressions");
const botbuilder_1 = require("botbuilder");
const botbuilder_dialogs_1 = require("botbuilder-dialogs");
const botbuilder_dialogs_adaptive_1 = require("botbuilder-dialogs-adaptive");
/**
 * Actions triggered when a Teams InvokeActivity is received with activity.name='composeExtension/selectItem'.
 */
class OnTeamsMESelectItem extends botbuilder_dialogs_adaptive_1.OnInvokeActivity {
    /**
     * Create expression for this condition.
     *
     * @returns {Expression} An [Expression](xref:adaptive-expressions.Expression) used to evaluate this rule.
     */
    createExpression() {
        return adaptive_expressions_1.Expression.andExpression(adaptive_expressions_1.Expression.parse(`${botbuilder_dialogs_1.TurnPath.activity}.channelId == '${botbuilder_1.Channels.Msteams}' && ${botbuilder_dialogs_1.TurnPath.activity}.name == 'composeExtension/selectItem'`), super.createExpression());
    }
}
exports.OnTeamsMESelectItem = OnTeamsMESelectItem;
OnTeamsMESelectItem.$kind = 'Teams.OnMESelectItem';
//# sourceMappingURL=onTeamsMESelectItem.js.map